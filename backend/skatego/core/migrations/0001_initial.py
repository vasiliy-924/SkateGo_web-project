# Generated by Django 5.2.4 on 2025-07-02 20:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Skateboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Серийный номер')),
                ('current_battery_capacity_ah', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Емкость батареи с учетом деградации (Ah)')),
                ('current_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Текущее напряжение в батарее (V)')),
                ('odometer_km', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Общий пробег текущего электроскейтбора (km)')),
                ('total_rides_count', models.PositiveIntegerField(default=0, verbose_name='Количество поездок (раз)')),
                ('status', models.CharField(choices=[('available', 'Доступен'), ('rented', 'Арендован'), ('maintenance', 'На обслуживании'), ('charging', 'На зарядке'), ('broken', 'Сломан'), ('offline', 'Недоступен')], default='available', max_length=30, verbose_name='Статус')),
                ('price_per_hour_rub', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(15000.0)], verbose_name='Стоимость поездки (rubles in hour)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SkateboardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('description', models.TextField(verbose_name='Описание модели')),
                ('max_speed_km_h', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)], verbose_name='Максимальная скорость (km/h)')),
                ('battery_capacity_from_factory_ah', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Емкость батареи (Ah)')),
                ('max_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Верхний предел напряжения батареи (V)')),
                ('min_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Нижний предел напряжения батареи (V)')),
                ('power_reserse_km', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(200.0)], verbose_name='Запас хода (km)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='skates_images/', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Модель электроскейтборда',
                'verbose_name_plural': 'Модели электроскейтбордов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SkateboardLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_lat', models.FloatField(help_text='Широта (-90.0 до 90.0)', validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('location_lng', models.FloatField(help_text='Долгота (-180.0 до 180.0)', validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('location_last_update', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('skateboard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_history', to='core.skateboard')),
            ],
            options={
                'verbose_name': 'Местоположение электроскейтборда',
                'verbose_name_plural': 'Местоположение электроскейтбордов',
                'ordering': ('-location_last_update',),
            },
        ),
        migrations.AddField(
            model_name='skateboard',
            name='model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skateboards', to='core.skateboardmodel', verbose_name='Модель'),
        ),
    ]
