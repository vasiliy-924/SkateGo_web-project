# Generated by Django 5.2.3 on 2025-06-22 12:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SkateboardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('description', models.TextField(verbose_name='Описание модели')),
                ('max_speed_km_h', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)], verbose_name='Максимальная скорость (km/h)')),
                ('battery_capacity_from_factory_ah', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Емкость батареи (Ah)')),
                ('max_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Верхний предел напряжения батареи (V)')),
                ('min_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Нижний предел напряжения батареи (V)')),
                ('power_reverse_km', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)], verbose_name='Запас хода (km)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Модель электроскейтборда',
                'verbose_name_plural': 'Модели электроскейтбордов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Skateboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Серийный номер')),
                ('current_battery_capacity_ah', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Емкость батареи с учетом деградации (Ah)')),
                ('current_battery_voltage_v', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(120.0)], verbose_name='Текущее напряжение в батарее (V)')),
                ('total_distance_km', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Общий пробег текущего электроскейтбора (km)')),
                ('status', models.CharField(choices=[('available', 'Доступен'), ('rented', 'Арендован'), ('maintenance', 'На обслуживании'), ('broken', 'Сломан')], default='available', max_length=30, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skateboards', to='core.skateboardmodel', verbose_name='Модель')),
            ],
        ),
    ]
