#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ SkateGo –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
"""

import os
import sys
from pathlib import Path

def check_file_exists(file_path, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if os.path.exists(file_path):
        print(f"‚úÖ {description}: {file_path}")
        return True
    else:
        print(f"‚ùå {description}: {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_directory_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:")
    
    required_dirs = [
        "skatego/core",
        "skatego/users", 
        "skatego/reviews",
        "skatego/api",
        "skatego/skatego"
    ]
    
    all_exist = True
    for dir_path in required_dirs:
        if os.path.exists(dir_path):
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
        else:
            print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path} - –ù–ï –ù–ê–ô–î–ï–ù–ê")
            all_exist = False
    
    return all_exist

def check_django_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Django —Ñ–∞–π–ª–æ–≤"""
    print("\nüêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Django —Ñ–∞–π–ª–æ–≤:")
    
    django_files = [
        ("skatego/manage.py", "Django manage.py"),
        ("skatego/skatego/settings.py", "Django settings.py"),
        ("skatego/skatego/urls.py", "Django urls.py"),
        ("skatego/skatego/wsgi.py", "Django wsgi.py"),
        ("skatego/core/models.py", "Core models.py"),
        ("skatego/users/models.py", "Users models.py"),
        ("skatego/reviews/models.py", "Reviews models.py"),
    ]
    
    all_exist = True
    for file_path, description in django_files:
        if not check_file_exists(file_path, description):
            all_exist = False
    
    return all_exist

def check_docker_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Docker —Ñ–∞–π–ª—ã"""
    print("\nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤:")
    
    docker_files = [
        ("Dockerfile", "Dockerfile"),
        ("docker-compose.yml", "Docker Compose"),
        ("requirements.txt", "Python requirements"),
    ]
    
    all_exist = True
    for file_path, description in docker_files:
        if not check_file_exists(file_path, description):
            all_exist = False
    
    return all_exist

def check_documentation():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"""
    print("\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:")
    
    doc_files = [
        ("README.md", "README.md"),
        ("ApplicationLogic.md", "–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞"),
        (".gitignore", ".gitignore"),
    ]
    
    all_exist = True
    for file_path, description in doc_files:
        if not check_file_exists(file_path, description):
            all_exist = False
    
    return all_exist

def check_migrations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π:")
    
    migration_dirs = [
        "skatego/core/migrations",
        "skatego/users/migrations",
        "skatego/reviews/migrations",
    ]
    
    all_exist = True
    for dir_path in migration_dirs:
        if os.path.exists(dir_path):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ __init__.py
            init_file = os.path.join(dir_path, "__init__.py")
            if os.path.exists(init_file):
                print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏: {dir_path}")
            else:
                print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏: {dir_path} - –Ω–µ—Ç __init__.py")
        else:
            print(f"‚ùå –ú–∏–≥—Ä–∞—Ü–∏–∏: {dir_path} - –ù–ï –ù–ê–ô–î–ï–ù–ê")
            all_exist = False
    
    return all_exist

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ SkateGo –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é")
    print("=" * 60)
    
    checks = [
        check_directory_structure(),
        check_django_files(),
        check_docker_files(),
        check_documentation(),
        check_migrations(),
    ]
    
    print("\n" + "=" * 60)
    
    if all(checks):
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é.")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. docker-compose up --build")
        print("2. docker-compose exec web python skatego/manage.py createsuperuser")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000")
        return True
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 